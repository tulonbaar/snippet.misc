name: Sync Branches

on:
  workflow_dispatch:
    inputs:
      target_branches:
        description: 'Branches to sync (comma-separated, default: prod,dev,test)'
        required: false
        default: 'prod,dev,test'

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Set target branches
      id: set-branches
      run: |
        BRANCHES="${{ github.event.inputs.target_branches }}"
        echo "branches=$BRANCHES" >> $GITHUB_OUTPUT
        echo "Target branches: $BRANCHES"
    
    - name: Sync branches
      run: |
        BRANCHES="${{ steps.set-branches.outputs.branches }}"
        IFS=',' read -ra BRANCH_ARRAY <<< "$BRANCHES"
        
        for branch in "${BRANCH_ARRAY[@]}"; do
          branch=$(echo "$branch" | xargs) # trim whitespace
          echo "Syncing branch: $branch"
          
          # Check if branch exists
          if git ls-remote --heads origin "$branch" | grep -q "$branch"; then
            echo "Branch $branch exists, proceeding with sync..."
            
            # Checkout the target branch
            if ! git checkout -B "$branch" "origin/$branch"; then
              echo "Failed to check out branch $branch from origin/$branch"
              exit 1
            fi
            
            # Merge main into the target branch
            if git merge origin/main --no-edit; then
              echo "Successfully merged main into $branch"
              
              # Push the updated branch
              if git push origin "$branch"; then
                echo "Successfully pushed $branch"
              else
                echo "Failed to push $branch"
                exit 1
              fi
            else
              echo "Merge conflict detected in $branch"
              echo "Please resolve conflicts manually for branch: $branch"
              
              # Create an issue to notify about merge conflict
              gh issue create \
                --title "Merge conflict: Failed to sync $branch with main" \
                --body "Automatic synchronization of branch \`$branch\` with \`main\` failed due to merge conflicts. Please resolve the conflicts manually and merge the changes." \
                --label "merge-conflict,automation" || echo "Failed to create issue"
              
              # Abort the merge and fail the workflow
              git merge --abort
              exit 1
            fi
          else
            echo "Branch $branch does not exist, creating from main..."
            git checkout -b "$branch" origin/main
            git push origin "$branch"
            echo "Created and pushed new branch: $branch"
          fi
          
          echo "---"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Summary
      run: |
        echo "Branch synchronization completed!"
        echo "Synchronized branches: ${{ steps.set-branches.outputs.branches }}"
        echo "Source branch: main"